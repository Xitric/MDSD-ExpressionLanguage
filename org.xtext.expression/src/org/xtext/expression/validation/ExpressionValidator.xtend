/*
 * generated by Xtext 2.20.0
 */
package org.xtext.expression.validation

import org.eclipse.xtext.validation.Check
import org.xtext.expression.expression.MathExpression
import org.xtext.expression.expression.Variable
import org.xtext.expression.expression.ExpressionPackage

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class ExpressionValidator extends AbstractExpressionValidator {
	
	@Check
	def checkDuplicateIdentifiers(Variable variable) {
		val container = variable.eContainer
		
		// It is only possible to have duplicate identifiers among declarations
		// in a MathExpression, since names shadow each other in Functionals
		switch (container) {
			MathExpression:
			if (! container.definitions.takeWhile[it != variable].forall[name != variable.name]) {
				error('''Duplicate identifier «variable.name»''', ExpressionPackage.eINSTANCE.variable_Name)
				return
			}
		}
	}
	
}
